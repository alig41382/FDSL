# Generated from C:/Users/Ali/Desktop/pycharm/FDSL/fdsl.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,15,118,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,
        2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,8,1,8,1,
        8,1,8,1,8,1,8,3,8,63,8,8,1,9,1,9,1,9,1,9,1,9,3,9,70,8,9,1,10,4,10,
        73,8,10,11,10,12,10,74,1,10,1,10,4,10,79,8,10,11,10,12,10,80,3,10,
        83,8,10,1,11,1,11,5,11,87,8,11,10,11,12,11,90,9,11,1,12,1,12,5,12,
        94,8,12,10,12,12,12,97,9,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,
        13,1,13,1,13,1,13,3,13,110,8,13,1,14,4,14,113,8,14,11,14,12,14,114,
        1,14,1,14,1,95,0,15,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,1,0,4,1,0,48,57,3,0,65,90,95,95,97,
        122,4,0,48,57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,129,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,1,31,1,0,0,
        0,3,40,1,0,0,0,5,42,1,0,0,0,7,44,1,0,0,0,9,46,1,0,0,0,11,48,1,0,
        0,0,13,50,1,0,0,0,15,52,1,0,0,0,17,62,1,0,0,0,19,69,1,0,0,0,21,72,
        1,0,0,0,23,84,1,0,0,0,25,91,1,0,0,0,27,109,1,0,0,0,29,112,1,0,0,
        0,31,32,5,102,0,0,32,33,5,101,0,0,33,34,5,97,0,0,34,35,5,116,0,0,
        35,36,5,117,0,0,36,37,5,114,0,0,37,38,5,101,0,0,38,39,5,58,0,0,39,
        2,1,0,0,0,40,41,5,61,0,0,41,4,1,0,0,0,42,43,5,43,0,0,43,6,1,0,0,
        0,44,45,5,45,0,0,45,8,1,0,0,0,46,47,5,42,0,0,47,10,1,0,0,0,48,49,
        5,47,0,0,49,12,1,0,0,0,50,51,5,40,0,0,51,14,1,0,0,0,52,53,5,41,0,
        0,53,16,1,0,0,0,54,63,5,62,0,0,55,56,5,62,0,0,56,63,5,61,0,0,57,
        63,5,60,0,0,58,59,5,60,0,0,59,63,5,61,0,0,60,61,5,61,0,0,61,63,5,
        61,0,0,62,54,1,0,0,0,62,55,1,0,0,0,62,57,1,0,0,0,62,58,1,0,0,0,62,
        60,1,0,0,0,63,18,1,0,0,0,64,65,5,65,0,0,65,66,5,78,0,0,66,70,5,68,
        0,0,67,68,5,79,0,0,68,70,5,82,0,0,69,64,1,0,0,0,69,67,1,0,0,0,70,
        20,1,0,0,0,71,73,7,0,0,0,72,71,1,0,0,0,73,74,1,0,0,0,74,72,1,0,0,
        0,74,75,1,0,0,0,75,82,1,0,0,0,76,78,5,46,0,0,77,79,7,0,0,0,78,77,
        1,0,0,0,79,80,1,0,0,0,80,78,1,0,0,0,80,81,1,0,0,0,81,83,1,0,0,0,
        82,76,1,0,0,0,82,83,1,0,0,0,83,22,1,0,0,0,84,88,7,1,0,0,85,87,7,
        2,0,0,86,85,1,0,0,0,87,90,1,0,0,0,88,86,1,0,0,0,88,89,1,0,0,0,89,
        24,1,0,0,0,90,88,1,0,0,0,91,95,5,34,0,0,92,94,9,0,0,0,93,92,1,0,
        0,0,94,97,1,0,0,0,95,96,1,0,0,0,95,93,1,0,0,0,96,98,1,0,0,0,97,95,
        1,0,0,0,98,99,5,34,0,0,99,26,1,0,0,0,100,101,5,116,0,0,101,102,5,
        114,0,0,102,103,5,117,0,0,103,110,5,101,0,0,104,105,5,102,0,0,105,
        106,5,97,0,0,106,107,5,108,0,0,107,108,5,115,0,0,108,110,5,101,0,
        0,109,100,1,0,0,0,109,104,1,0,0,0,110,28,1,0,0,0,111,113,7,3,0,0,
        112,111,1,0,0,0,113,114,1,0,0,0,114,112,1,0,0,0,114,115,1,0,0,0,
        115,116,1,0,0,0,116,117,6,14,0,0,117,30,1,0,0,0,10,0,62,69,74,80,
        82,88,95,109,114,1,6,0,0
    ]

class fdslLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    COMPARE_OP = 9
    LOGICAL_OP = 10
    NUMBER = 11
    IDENTIFIER = 12
    STRING = 13
    BOOL = 14
    WS = 15

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'feature:'", "'='", "'+'", "'-'", "'*'", "'/'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "COMPARE_OP", "LOGICAL_OP", "NUMBER", "IDENTIFIER", "STRING", 
            "BOOL", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "COMPARE_OP", "LOGICAL_OP", "NUMBER", "IDENTIFIER", 
                  "STRING", "BOOL", "WS" ]

    grammarFileName = "fdsl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


