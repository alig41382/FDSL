# Generated from C:/Users/Ali/Desktop/pycharm/FDSL/fdsl.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,18,153,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,
        1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,
        73,8,9,1,10,1,10,1,10,1,10,1,10,3,10,80,8,10,1,11,4,11,83,8,11,11,
        11,12,11,84,1,11,1,11,4,11,89,8,11,11,11,12,11,90,3,11,93,8,11,1,
        12,1,12,5,12,97,8,12,10,12,12,12,100,9,12,1,13,1,13,5,13,104,8,13,
        10,13,12,13,107,9,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,
        1,14,1,14,3,14,120,8,14,1,15,4,15,123,8,15,11,15,12,15,124,1,15,
        1,15,1,16,1,16,1,16,1,16,5,16,133,8,16,10,16,12,16,136,9,16,1,16,
        1,16,1,17,1,17,1,17,1,17,5,17,144,8,17,10,17,12,17,147,9,17,1,17,
        1,17,1,17,1,17,1,17,2,105,145,0,18,1,1,3,2,5,3,7,4,9,5,11,6,13,7,
        15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        1,0,5,1,0,48,57,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
        122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,167,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,1,37,1,0,0,0,3,46,1,0,0,0,5,48,1,0,0,0,7,50,1,0,0,
        0,9,52,1,0,0,0,11,54,1,0,0,0,13,56,1,0,0,0,15,58,1,0,0,0,17,60,1,
        0,0,0,19,72,1,0,0,0,21,79,1,0,0,0,23,82,1,0,0,0,25,94,1,0,0,0,27,
        101,1,0,0,0,29,119,1,0,0,0,31,122,1,0,0,0,33,128,1,0,0,0,35,139,
        1,0,0,0,37,38,5,102,0,0,38,39,5,101,0,0,39,40,5,97,0,0,40,41,5,116,
        0,0,41,42,5,117,0,0,42,43,5,114,0,0,43,44,5,101,0,0,44,45,5,58,0,
        0,45,2,1,0,0,0,46,47,5,61,0,0,47,4,1,0,0,0,48,49,5,43,0,0,49,6,1,
        0,0,0,50,51,5,45,0,0,51,8,1,0,0,0,52,53,5,42,0,0,53,10,1,0,0,0,54,
        55,5,47,0,0,55,12,1,0,0,0,56,57,5,40,0,0,57,14,1,0,0,0,58,59,5,41,
        0,0,59,16,1,0,0,0,60,61,5,44,0,0,61,18,1,0,0,0,62,73,5,62,0,0,63,
        64,5,62,0,0,64,73,5,61,0,0,65,73,5,60,0,0,66,67,5,60,0,0,67,73,5,
        61,0,0,68,69,5,61,0,0,69,73,5,61,0,0,70,71,5,33,0,0,71,73,5,61,0,
        0,72,62,1,0,0,0,72,63,1,0,0,0,72,65,1,0,0,0,72,66,1,0,0,0,72,68,
        1,0,0,0,72,70,1,0,0,0,73,20,1,0,0,0,74,75,5,65,0,0,75,76,5,78,0,
        0,76,80,5,68,0,0,77,78,5,79,0,0,78,80,5,82,0,0,79,74,1,0,0,0,79,
        77,1,0,0,0,80,22,1,0,0,0,81,83,7,0,0,0,82,81,1,0,0,0,83,84,1,0,0,
        0,84,82,1,0,0,0,84,85,1,0,0,0,85,92,1,0,0,0,86,88,5,46,0,0,87,89,
        7,0,0,0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,0,
        91,93,1,0,0,0,92,86,1,0,0,0,92,93,1,0,0,0,93,24,1,0,0,0,94,98,7,
        1,0,0,95,97,7,2,0,0,96,95,1,0,0,0,97,100,1,0,0,0,98,96,1,0,0,0,98,
        99,1,0,0,0,99,26,1,0,0,0,100,98,1,0,0,0,101,105,5,34,0,0,102,104,
        9,0,0,0,103,102,1,0,0,0,104,107,1,0,0,0,105,106,1,0,0,0,105,103,
        1,0,0,0,106,108,1,0,0,0,107,105,1,0,0,0,108,109,5,34,0,0,109,28,
        1,0,0,0,110,111,5,116,0,0,111,112,5,114,0,0,112,113,5,117,0,0,113,
        120,5,101,0,0,114,115,5,102,0,0,115,116,5,97,0,0,116,117,5,108,0,
        0,117,118,5,115,0,0,118,120,5,101,0,0,119,110,1,0,0,0,119,114,1,
        0,0,0,120,30,1,0,0,0,121,123,7,3,0,0,122,121,1,0,0,0,123,124,1,0,
        0,0,124,122,1,0,0,0,124,125,1,0,0,0,125,126,1,0,0,0,126,127,6,15,
        0,0,127,32,1,0,0,0,128,129,5,47,0,0,129,130,5,47,0,0,130,134,1,0,
        0,0,131,133,8,4,0,0,132,131,1,0,0,0,133,136,1,0,0,0,134,132,1,0,
        0,0,134,135,1,0,0,0,135,137,1,0,0,0,136,134,1,0,0,0,137,138,6,16,
        0,0,138,34,1,0,0,0,139,140,5,47,0,0,140,141,5,42,0,0,141,145,1,0,
        0,0,142,144,9,0,0,0,143,142,1,0,0,0,144,147,1,0,0,0,145,146,1,0,
        0,0,145,143,1,0,0,0,146,148,1,0,0,0,147,145,1,0,0,0,148,149,5,42,
        0,0,149,150,5,47,0,0,150,151,1,0,0,0,151,152,6,17,0,0,152,36,1,0,
        0,0,12,0,72,79,84,90,92,98,105,119,124,134,145,1,6,0,0
    ]

class fdslLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    COMPARE_OP = 10
    LOGICAL_OP = 11
    NUMBER = 12
    IDENTIFIER = 13
    STRING = 14
    BOOL = 15
    WS = 16
    LINE_COMMENT = 17
    BLOCK_COMMENT = 18

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'feature:'", "'='", "'+'", "'-'", "'*'", "'/'", "'('", "')'", 
            "','" ]

    symbolicNames = [ "<INVALID>",
            "COMPARE_OP", "LOGICAL_OP", "NUMBER", "IDENTIFIER", "STRING", 
            "BOOL", "WS", "LINE_COMMENT", "BLOCK_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "COMPARE_OP", "LOGICAL_OP", "NUMBER", 
                  "IDENTIFIER", "STRING", "BOOL", "WS", "LINE_COMMENT", 
                  "BLOCK_COMMENT" ]

    grammarFileName = "fdsl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


